---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by b_ree.
--- DateTime: 2019/12/3 10:23
---

local skynet = require "skynet"
local utils = require "utils"
local const_game = require "const_game"
local serialize = require "serialize"
require "functions"

local M = {}

function M.room_to_redis(_room_uuid, _data)
    local key = table.concat({const_game.REDIS_KEY_SNAPSHOT_ROOM, _room_uuid})
    skynet.send(utils.redis_route(), "lua", "set", key, serialize.serialize_string(_data))
    _data = nil
end

function M.player_to_redis(_room_uuid, _uid, _data)
    local key = table.concat({const_game.REDIS_KEY_SNAPSHOT_PLAYER, _room_uuid, ":", _uid})
    skynet.send(utils.redis_route(), "lua", "set", key, serialize.serialize_string(_data))
    _data = nil
end

function M.player_from_redis(_room_uuid, _uid)
    return serialize.deseristring_string(skynet.call(utils.redis_route(), "lua", "get",
            table.concat({const_game.REDIS_KEY_SNAPSHOT_PLAYER, _room_uuid, ":", _uid})))
end

function M.del_room_key(_room_uuid)
    local key = table.concat({const_game.REDIS_KEY_SNAPSHOT_ROOM, _room_uuid})
    skynet.send(utils.redis_route(), "lua", "del", key)

    --删除房间后，删除玩家缓存
    local p_keys = skynet.call(utils.redis_route(), "lua", "keys", table.concat({const_game.REDIS_KEY_SNAPSHOT_PLAYER, _room_uuid, ":*"}))
    if #p_keys > 0 then
        skynet.send(utils.redis_route(), "lua", "del", table.unpack(p_keys))
    end
end

function M.del_player_key(_room_uuid, _uid)
    local key = table.concat({const_game.REDIS_KEY_SNAPSHOT_PLAYER, _room_uuid, ":", _uid})
    skynet.call(utils.redis_route(), "lua", "del", key)
end

return M