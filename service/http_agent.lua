---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by b_ree.
--- DateTime: 2019/11/2 15:30
---

local skynet = require "skynet"
local socket = require "skynet.socket"
local httpd = require "http.httpd"
local sockethelper = require "http.sockethelper"
local protobuf = require "pb"
local cjson = require "cjson"
local log = require "log"
local neturl = require "neturl"
local const_http_route = require "const_route_http"
require "functions"

local pb_files = {
    "../proto/game.pb",
}
cjson.encode_sparse_array(true)

local function response(id, code, data, ...)
    local header = ... or {}
    header["Content-Type"] = "text/html; charset=UTF-8"
    header['Access-Control-Allow-Origin'] = '*'
    local ok, err = httpd.write_response(sockethelper.writefunc(id), code, data, header)
    if not ok then
        skynet.error(string.format("fd = %d, %s", id, err))
    end
end

local function handle(id, addr)
    socket.start(id)
    local code, url, _, _, body = httpd.read_request(sockethelper.readfunc(id), 8192)
    if not code or code ~= 200 then
        return
    end
    local url_para = neturl.parse(url)
    log.log("[%s] http request: [%s]", addr, url_para.path)
    local r = const_http_route[url_para.path]
    if r then
        require(r._c)[r._m](id, url_para.query, body, addr)
    else
        log.log("http route error. [%s]", url_para.path)
        response(id, 404)
    end
end

skynet.init(function ()
    for _,v in ipairs(pb_files) do
        --log.log("register pb file: %s", v)
        protobuf.loadfile(v)
    end
end)

skynet.start(function()
    skynet.dispatch("lua", function (_,_,id,addr)
        if id == "_exit_" then
            skynet.exit()
        else
            handle(id, addr)
            socket.close(id)
        end
    end)
end)