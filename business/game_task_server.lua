---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by b_ree.
--- DateTime: 2019/12/5 20:01
--- 该服务用于不依赖于房间服务的任务执行操作
---

local skynet = require "skynet"
local cjson = require "cjson"
local http = require "http"
local log = require "log"
local const_game = require "const_game"
require "skynet.manager"

local REPORT_RETRY_NUM = 10 -- http发送report重试次数
local TODAY = os.date("%d") --用于标记日志切割

--定时器逻辑
local function _tick()
    local d = os.date("%d")
    if d ~= TODAY then
        --日志切割
        os.execute("sh ./cut_log.sh")
        TODAY = d
        log.log("{game_gask_server.cut_log_tick} log cut complete!")
    end
end

local CMD = {}

skynet.start(function ()
    skynet.dispatch("lua", function (_, _, cmd, ...)
        local f = assert(CMD[cmd])
        skynet.ret(skynet.pack(f(...)))
    end)

    skynet.register(".game_task_server")

    skynet.fork(function ()
        while true do
            _tick()
            skynet.sleep(500)
        end
    end)
end)

--解散房间汇报
function CMD.room_dismss_report(_report_data, _room_id)
    local report_num = REPORT_RETRY_NUM
    skynet.fork(function ()
        while report_num > 0 do
            local ok, rs = http.post(table.concat({const_game.LOBBY_API_HOST, "/room/dismiss"}), _report_data)
            if ok then
                local de_ok, de_rs = pcall(cjson.decode, rs)
                if de_ok or de_rs.code == 1 then
                    report_num = 0
                    log.log("{room_dismss_report}room_id[%d]报告解散房间成功.", _room_id)
                else
                    report_num = report_num - 1
                    log.ding("{room_dismss_report}room_id[%d]报告返回错误. %s", _room_id, rs or "")
                end
            else
                report_num = report_num - 1
                log.ding("{room_dismss_report}room_id[%d]报告失败. %s", _room_id, rs or "")
            end
            skynet.sleep(500 + (REPORT_RETRY_NUM - report_num) * 100)
        end
    end)
end